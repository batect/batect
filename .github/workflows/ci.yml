name: CI
on: [push, pull_request]
env:
  GRADLE_OPTS: "-Dorg.gradle.internal.launcher.welcomeMessageEnabled=false"

jobs:
  validate-gradle-wrapper:
    name: "Validate Gradle wrapper"
    runs-on: ubuntu-18.04

    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.2
        with:
          fetch-depth: 0
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.3

  build-windows:
    name: "Build (Windows)"
    runs-on: windows-2019
    env:
      # This is required because WSL installs a 'bash.exe' in C:\Windows\System32 that always takes precedence over anything in PATH
      # See https://github.com/actions/virtual-environments/pull/1081#issuecomment-661220718.
      BASH_PATH: C:\Program Files\Git\bin\bash.exe

    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.2
        with:
          fetch-depth: 0

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: gradle-wrapper-${{ runner.os }}-${{ hashFiles('gradle/wrapper/**/*') }}
          restore-keys: gradle-wrapper-${{ runner.os }}

      - name: Cache packages
        id: cache-packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: gradle-packages-${{ runner.os }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: gradle-packages-${{ runner.os }}

      - name: Build and test
        run: ./gradlew --parallel -DgenerateCoverage=true app:check libs:git-client:integrationTest jacocoTestReport

      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v1.0.13
        with:
          flags: windows

      - name: Run wrapper tests
        run: ./gradlew wrapper:windows:check

      - name: Print Docker version information
        run: docker version

      - name: Run journey tests (Windows containers)
        run: ./gradlew journeyTest -PwindowsContainers

      - name: Stop Gradle daemon
        run: ./gradlew --stop

      - name: Clean up dependencies before caching
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: |
          Remove-Item -ErrorAction SilentlyContinue          ~/.gradle/caches/modules-2/modules-2.lock
          Remove-Item -ErrorAction SilentlyContinue -Recurse ~/.gradle/caches/*/plugin-resolution/
          Remove-Item -ErrorAction SilentlyContinue -Recurse ~/.gradle/caches/*/scripts/
          Remove-Item -ErrorAction SilentlyContinue -Recurse ~/.gradle/caches/*/scripts-remapped/
          Remove-Item -ErrorAction SilentlyContinue -Recurse ~/.gradle/caches/*/fileHashes/
          Remove-Item -ErrorAction SilentlyContinue          ~/.gradle/caches/*/fileContent/*.lock
          Remove-Item -ErrorAction SilentlyContinue          ~/.gradle/caches/*/javaCompile/*.lock
          Remove-Item -ErrorAction SilentlyContinue          ~/.gradle/caches/*/executionHistory/*.lock
          Remove-Item -ErrorAction SilentlyContinue          ~/.gradle/caches/*/generated-gradle-jars/*.lock
          Remove-Item -ErrorAction SilentlyContinue          ~/.gradle/caches/jars-*/*.lock
          Remove-Item -ErrorAction SilentlyContinue          ~/.gradle/caches/journal-1/file-access.bin
          Remove-Item -ErrorAction SilentlyContinue          ~/.gradle/caches/journal-1/*.lock

  build-linux:
    name: "Build (Linux)"
    runs-on: ubuntu-18.04

    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.2
        with:
          fetch-depth: 0

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: gradle-wrapper-${{ runner.os }}-${{ hashFiles('gradle/wrapper/**/*') }}
          restore-keys: gradle-wrapper-${{ runner.os }}

      - name: Cache packages
        id: cache-packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: gradle-packages-${{ runner.os }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: gradle-packages-${{ runner.os }}

      - name: Build and test
        run: unset JAVA_TOOL_OPTIONS && ./gradlew --parallel -DgenerateCoverage=true check libs:git-client:integrationTest jacocoTestReport -x wrapper:unix:check -x wrapper:windows:check

      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v1.0.13
        with:
          flags: linux

      - name: Assemble release
        run: unset JAVA_TOOL_OPTIONS && ./gradlew --parallel assembleRelease

      - name: Stop Gradle daemon
        run: ./gradlew --stop

      - name: Clean up dependencies before caching
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: |
          rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
          rm -fr $HOME/.gradle/caches/*/plugin-resolution/
          rm -fr $HOME/.gradle/caches/*/scripts/
          rm -fr $HOME/.gradle/caches/*/scripts-remapped/
          rm -fr $HOME/.gradle/caches/*/fileHashes/
          rm -f  $HOME/.gradle/caches/*/fileContent/*.lock
          rm -f  $HOME/.gradle/caches/*/javaCompile/*.lock
          rm -f  $HOME/.gradle/caches/*/executionHistory/*.lock
          rm -f  $HOME/.gradle/caches/*/generated-gradle-jars/*.lock
          rm -f  $HOME/.gradle/caches/jars-3/*.lock
          rm -f  $HOME/.gradle/caches/jars-8/*.lock
          rm -f  $HOME/.gradle/caches/transforms-1/transforms-1.lock
          rm -f  $HOME/.gradle/caches/journal-1/file-access.bin
          rm -f  $HOME/.gradle/caches/journal-1/*.lock

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Binaries
          path: build/release
          if-no-files-found: error

      - name: Upload Bintray descriptor
        uses: actions/upload-artifact@v2
        with:
          name: Bintray descriptor
          path: build/bintray/descriptor.json
          if-no-files-found: error

  wrapper-test-linux:
    name: "Run wrapper tests (Linux)"
    runs-on: ubuntu-18.04

    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.2
        with:
          fetch-depth: 0

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: gradle-wrapper-${{ runner.os }}-${{ hashFiles('gradle/wrapper/**/*') }}
          restore-keys: gradle-wrapper-${{ runner.os }}

      - name: Cache packages
        id: cache-packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: gradle-wrapper-packages-${{ runner.os }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: gradle-wrapper-packages-${{ runner.os }}

      - name: Run tests
        run: unset JAVA_TOOL_OPTIONS && ./gradlew --parallel wrapper:unix:check

  build-docs:
    name: "Build docs"
    runs-on: ubuntu-18.04

    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.2
        with:
          fetch-depth: 0

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: gradle-wrapper-${{ runner.os }}-${{ hashFiles('gradle/wrapper/**/*') }}
          restore-keys: gradle-wrapper-${{ runner.os }}

      - name: Cache packages
        id: cache-packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: gradle-docs-packages-${{ runner.os }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: gradle-docs-packages-${{ runner.os }}

      - name: Build docs
        run: unset JAVA_TOOL_OPTIONS && ./gradlew --parallel docs:build

      - name: Upload docs
        uses: actions/upload-artifact@v2
        with:
          name: Docs
          path: docs/build/docs
          if-no-files-found: error

  journey-test-linux:
    name: "Run journey tests (Linux / Docker ${{ matrix.docker_version }})"
    needs:
      - build-linux
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        docker_version:
          - 18.03.1~ce~3-0~ubuntu
          - latest
      fail-fast: false

    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.2
        with:
          fetch-depth: 0

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: gradle-wrapper-${{ runner.os }}-${{ hashFiles('gradle/wrapper/**/*') }}
          restore-keys: gradle-wrapper-${{ runner.os }}

      - name: Cache packages
        id: cache-packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: gradle-packages-${{ runner.os }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: gradle-packages-${{ runner.os }}

      - name: Install Docker
        run: ./travis/install_docker.sh ${{ matrix.docker_version }}

      - name: Run journey tests
        run: unset JAVA_TOOL_OPTIONS && ./gradlew --parallel journeyTest

  integration-test-linux:
    name: "Run integration tests (Linux / Docker ${{ matrix.docker_version }} using ${{ matrix.connection_type }})"
    needs:
      - build-linux
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        include:
          - docker_version: latest
            connection_type: Unix socket
          - docker_version: 18.03.1~ce~3-0~ubuntu
            connection_type: Unix socket
          - docker_version: latest
            connection_type: TLS over TCP

      fail-fast: false

    steps:
      - name: Check out code
        uses: actions/checkout@v2.3.2
        with:
          fetch-depth: 0

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: gradle-wrapper-${{ runner.os }}-${{ hashFiles('gradle/wrapper/**/*') }}
          restore-keys: gradle-wrapper-${{ runner.os }}

      - name: Cache packages
        id: cache-packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: gradle-packages-${{ runner.os }}-${{ hashFiles('**/*.gradle') }}
          restore-keys: gradle-packages-${{ runner.os }}

      - name: Install Docker
        run: ./travis/install_docker.sh ${{ matrix.docker_version }}

      - name: Configure TLS connection
        run: ./travis/configure_docker_tls.sh
        if: matrix.connection_type == 'TLS over TCP'

      - name: Run integration tests
        run: unset JAVA_TOOL_OPTIONS && ./gradlew --parallel :libs:docker-client:integrationTest

  publish-release:
    name: "Publish release"
    needs:
      - validate-gradle-wrapper
      - build-windows
      - build-linux
      - wrapper-test-linux
      - build-docs
      - journey-test-linux
      - integration-test-linux
#    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/') && github.repository == 'batect/batect'
    runs-on: ubuntu-18.04

    steps:
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: Binaries
          path: build/release

      - name: Download Bintray descriptor
        uses: actions/download-artifact@v2
        with:
          name: Bintray descriptor
          path: build/bintray

      - name: Download docs
        uses: actions/download-artifact@v2
        with:
          name: Docs
          path: docs/build/docs

      - name: Print directory structure
        run: tree .
