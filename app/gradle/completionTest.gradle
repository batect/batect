/*
   Copyright 2017-2021 Charles Korn.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/

sourceSets {
    completionTest {}
}

def testEnvironmentImageName = "batect-completion-test-env"
def completionTestDir = project.file("src/completionTest").absolutePath

tasks.register("buildCompletionTestEnvironmentImage", Exec) {
    description "Build the Docker image used as a test environment."
    group "Verification"

    def imageDirectory = project.file "$completionTestDir/env"
    inputs.dir imageDirectory

    standardOutput = new ByteArrayOutputStream()
    errorOutput = standardOutput
    ignoreExitValue = true

    environment "DOCKER_BUILDKIT", "1"

    commandLine "docker", "build",
        "-t", testEnvironmentImageName,
        imageDirectory

    doLast {
        if (execResult.exitValue != 0) {
            throw new GradleException("Building image failed: ${standardOutput.toString()}")
        }
    }
}

tasks.register("completionTest", Exec) {
    description "Runs shell tab completion tests."
    group "Verification"

    def upToDateFile = getTemporaryDir().toPath().resolve("lastRun")

    inputs.files fileTree(dir: "$completionTestDir", include: "**/*")
    inputs.files installShadowDist
    outputs.file upToDateFile

    dependsOn buildCompletionTestEnvironmentImage
    dependsOn installShadowDist

    commandLine "docker", "run", "--rm", "-t",
        "-v", "$completionTestDir/tests:/tests",
        "-v", "$buildDir/install/app-shadow:/app",
        "-w", "/tests",
        "-e", "BATECT_ENABLE_TELEMETRY=false",
        testEnvironmentImageName, "./tests.py"

    doLast {
        // Based on https://stackoverflow.com/questions/1406473/simulate-touch-command-with-java
        upToDateFile.text = System.currentTimeMillis()
    }
}
