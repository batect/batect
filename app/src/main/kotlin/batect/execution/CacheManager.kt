/*
    Copyright 2017-2022 Charles Korn.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

package batect.execution

import batect.cli.CommandLineOptions
import batect.config.ProjectPaths
import batect.docker.DockerContainerType
import batect.utils.generateId
import java.nio.file.Files
import java.nio.file.Path

class CacheManager(
    private val projectPaths: ProjectPaths,
    private val containerType: DockerContainerType,
    private val commandLineOptions: CommandLineOptions,
) {
    private val cacheKeyPath: Path by lazy { projectPaths.cacheDirectory.resolve("key") }

    val projectCacheKey: String by lazy {
        if (Files.exists(cacheKeyPath)) {
            Files.readAllBytes(cacheKeyPath)
                .toString(Charsets.UTF_8)
                .split('\n')
                .filter { !it.isBlank() }
                .single { !it.startsWith('#') }
                .trim()
        } else {
            val id = generateId(6)

            val fileContent = listOf(
                "# This file was autogenerated by Batect to track which Docker volumes are associated with this project.",
                "# Do not modify it, and do not commit it to source control.",
                id,
            ).joinToString("\n")

            Files.createDirectories(cacheKeyPath.parent)
            Files.write(cacheKeyPath, fileContent.toByteArray(Charsets.UTF_8))

            id
        }
    }

    val cacheType: CacheType = when (containerType) {
        DockerContainerType.Linux -> commandLineOptions.cacheType
        DockerContainerType.Windows -> CacheType.Directory
    }
}
