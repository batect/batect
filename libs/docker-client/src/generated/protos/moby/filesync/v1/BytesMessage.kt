// Code generated by Wire protocol buffer compiler, do not edit.
// Source: moby.filesync.v1.BytesMessage in github.com/moby/buildkit/session/filesync/filesync.proto
package moby.filesync.v1

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Unit
import kotlin.hashCode
import kotlin.jvm.JvmField
import okio.ByteString

/**
 * BytesMessage contains a chunk of byte data
 */
public class BytesMessage(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#BYTES",
    label = WireField.Label.OMIT_IDENTITY,
    declaredName = "data"
  )
  public val data_: ByteString = ByteString.EMPTY,
  unknownFields: ByteString = ByteString.EMPTY
) : Message<BytesMessage, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN
  )
  public override fun newBuilder(): Nothing = throw AssertionError()

  public override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is BytesMessage) return false
    if (unknownFields != other.unknownFields) return false
    if (data_ != other.data_) return false
    return true
  }

  public override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + data_.hashCode()
      super.hashCode = result
    }
    return result
  }

  public override fun toString(): String {
    val result = mutableListOf<String>()
    result += """data_=$data_"""
    return result.joinToString(prefix = "BytesMessage{", separator = ", ", postfix = "}")
  }

  public fun copy(data_: ByteString = this.data_, unknownFields: ByteString = this.unknownFields):
      BytesMessage = BytesMessage(data_, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<BytesMessage> = object : ProtoAdapter<BytesMessage>(
      FieldEncoding.LENGTH_DELIMITED, 
      BytesMessage::class, 
      "type.googleapis.com/moby.filesync.v1.BytesMessage", 
      PROTO_3, 
      null
    ) {
      public override fun encodedSize(value: BytesMessage): Int {
        var size = value.unknownFields.size
        if (value.data_ != ByteString.EMPTY) size += ProtoAdapter.BYTES.encodedSizeWithTag(1,
            value.data_)
        return size
      }

      public override fun encode(writer: ProtoWriter, value: BytesMessage): Unit {
        if (value.data_ != ByteString.EMPTY) ProtoAdapter.BYTES.encodeWithTag(writer, 1,
            value.data_)
        writer.writeBytes(value.unknownFields)
      }

      public override fun decode(reader: ProtoReader): BytesMessage {
        var data_: ByteString = ByteString.EMPTY
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> data_ = ProtoAdapter.BYTES.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return BytesMessage(
          data_ = data_,
          unknownFields = unknownFields
        )
      }

      public override fun redact(value: BytesMessage): BytesMessage = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
